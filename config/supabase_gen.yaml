# Remote database configuration - uncomment and fill in details to use remote mode
database:
  connection_type: remote
  supabase_url: https://zfqpbxhkebliqlcggdhl.supabase.co
  supabase_key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpmcXBieGhrZWJsaXFsY2dnZGhsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0MDY4MjEwOCwiZXhwIjoyMDU2MjU4MTA4fQ.ZFMVZzKDmfArqePKbvEywomqxfXLr992lmGLyC-JlrA
  database: postgres  # Database name is still required even for remote connection


generation:
  output_directory: lib/generated/
  model_prefix: ''
  model_suffix: Model
  repository_suffix: Repository
  
  # Generated column handling
  exclude_generated_columns: true  # Automatically exclude generated columns from serialization
  # Note: Spatial/geographic columns (geometry, geography, point, etc.) are automatically excluded
  
  # Manual column exclusions per table
  column_exclusions:
    # Example: exclude specific columns from specific tables
    # driver_locations:
    #   - location_point  # Generated column or spatial column
    # other_table:
    #   - computed_field
  
  # Tables to probe when using remote connection
  probe_tables:
    # Application tables
      - 'active_jobs'
      - 'conversations'
      - 'diagnosis_findings'
      - 'diagnosis_findings_with_photos'
      - 'diagnosis_phase'
      - 'en_route_phase'
      - 'error_logs'
      - 'finding_photos'
      - 'homeowner_location_updates'
      - 'homeowner_profiles'
      - 'job_broadcasts'
      - 'job_stage_history'
      - 'job_tasks'
      - 'jobs'
      - 'location_bookmarks'
      - 'location_map_settings'
      - 'location_verification_attempts'
      - 'location_verification_summary'
      - 'location_verifications'
      - 'material_usage'
      - 'messages'
      - 'pause_periods'
      - 'payment_methods'
      - 'preparation_checks'
      - 'professional_earnings'
      - 'professional_location_updates'
      - 'professional_profiles'
      - 'professional_responses'
      - 'professional_services'
      - 'quote_history'
      - 'quote_line_items'
      - 'quote_phase'
      - 'quote_summaries'
      - 'safety_checks'
      - 'service_categories'
      - 'service_quotes'
      - 'services'
      - 'session_pause_reasons'
      - 'site_photos'
      - 'task_photos'
      - 'task_progress_summary'
      - 'test_jobs'
      - 'users'
      - 'work_sessions'
      - 'work_tasks'
      - 'work_timeline_events'
      - 'work_updates'
      - 'working_phase'
    
  exclude_tables: 
    # Exclude system schemas
    - '_realtime.*'
    - 'auth.*'
    - 'net.*'
    - 'pgsodium.*'
    - 'realtime.*'
    - 'storage.*'
    # - 'supabase_functions.*'
    - 'vault.*'
    # Exclude views and system tables from public schema
    - 'public.*_view'
    # Exclude PostGIS system tables
    - 'spatial_ref_sys'
    - 'geography_columns'
    - 'geometry_columns'
    - 'raster_columns'
    - 'raster_overviews'
    # Exclude other spatial system tables
    - 'topology.*'
    - 'tiger.*'
    - 'tiger_data.*'
    
  include_tables: 
    - 'public.*'  # Include all tables from public schema
  
  generate_for_all_tables: false  # Only generate for explicitly included tables
  use_null_safety: true

  # NEW: Provider generation options
  providers:
    # Set to true to enable generation of Riverpod providers
    generate: true
    
    # Provider naming conventions
    suffix: Provider
    
    # State management options
    type: riverpod  # Currently only riverpod is supported
    
    # Use AppException class for error handling
    # If true, imports AppException from core/errors/app_exception.dart
    use_app_exception: true
    
    # Whether providers should use keepAlive to persist state
    # When set to false, providers will be auto-disposed when no longer used
    use_keep_alive: false
    
    # Whether to auto-invalidate providers on data changes
    # When true, notifiers will refresh their state after CRUD operations
    invalidate_on_change: true
    
    # Generate AsyncValueWidget for easy UI consumption
    # Creates a standard widget for handling async states in shared/widgets/
    generate_async_value_widget: true